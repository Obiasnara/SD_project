}
boxplot(histo_data_no_type,
main = "Boxplot des variables",
col = "lightblue",
border = "black")
knitr::opts_chunk$set(echo = TRUE)
root = "./statlog+vehicle+silhouettes/"
names = "a;b;c;d;e;f;g;h"
#collname <- c("COMPACTNESS", "CIRCULARITY", "DISTANCE CIRCULARITY", "RADIUS RATIO",
#              "PR.AXIS ASPECT RATIO", "MAX.LENGTH ASPECT RATIO", "SCATTER RATIO",
#              "ELONGATEDNESS", "PR.AXIS RECTANGULARITY", "MAX.LENGTH RECTANGULARITY",
#              "SCALED VARIANCE ALONG MAJOR AXIS", "SCALED VARIANCE ALONG MINOR AXIS",
#              "SCALED RADIUS OF GYRATION", "SKEWNESS ABOUT MINOR AXIS",
#              "SKEWNESS ABOUT MAJOR AXIS", "KURTOSIS ABOUT MINOR AXIS",
#              "KURTOSIS ABOUT MAJOR AXIS", "HOLLOWS RATIO", "VEHICLE TYPE")
collname <- c("COMP", "CIRC", "DISTCIRC", "RADIUS", "PRAX", "MAXL", "SCAT",
"ELONG", "PRREC", "MAXREC", "SVMJAX", "SVMNAX", "SRG", "SKMIN",
"SKMAJ", "KURMIN", "KURMAJ", "HOL", "TYPE")
# Construct file paths
file_paths <- paste0(root, "xa", strsplit(names, ";")[[1]], ".dat")
file_paths
file_contents <- lapply(file_paths, readLines)
# Flatten the nested list into a single character vector
flattened_data <- unlist(file_contents)
# Split each row into individual columns based on spaces
split_data <- strsplit(flattened_data, "\\s+")
# Convert to a data frame
data_table <- do.call(rbind, split_data)
# Optionally, assign column names
colnames(data_table) <- paste0(collname)
combined_data <- as.data.frame(data_table)
knitr::opts_chunk$set(echo = TRUE)
root = "./statlog+vehicle+silhouettes/"
names = "a;b;c;d;e;f;g;h"
#collname <- c("COMPACTNESS", "CIRCULARITY", "DISTANCE CIRCULARITY", "RADIUS RATIO",
#              "PR.AXIS ASPECT RATIO", "MAX.LENGTH ASPECT RATIO", "SCATTER RATIO",
#              "ELONGATEDNESS", "PR.AXIS RECTANGULARITY", "MAX.LENGTH RECTANGULARITY",
#              "SCALED VARIANCE ALONG MAJOR AXIS", "SCALED VARIANCE ALONG MINOR AXIS",
#              "SCALED RADIUS OF GYRATION", "SKEWNESS ABOUT MINOR AXIS",
#              "SKEWNESS ABOUT MAJOR AXIS", "KURTOSIS ABOUT MINOR AXIS",
#              "KURTOSIS ABOUT MAJOR AXIS", "HOLLOWS RATIO", "VEHICLE TYPE")
collname <- c("COMP", "CIRC", "DISTCIRC", "RADIUS", "PRAX", "MAXL", "SCAT",
"ELONG", "PRREC", "MAXREC", "SVMJAX", "SVMNAX", "SRG", "SKMIN",
"SKMAJ", "KURMIN", "KURMAJ", "HOL", "TYPE")
# Construct file paths
file_paths <- paste0(root, "xa", strsplit(names, ";")[[1]], ".dat")
file_paths
file_contents <- lapply(file_paths, readLines)
# Flatten the nested list into a single character vector
flattened_data <- unlist(file_contents)
# Split each row into individual columns based on spaces
split_data <- strsplit(flattened_data, "\\s+")
# Convert to a data frame
data_table <- do.call(rbind, split_data)
# Optionally, assign column names
colnames(data_table) <- paste0(collname)
combined_data <- as.data.frame(data_table)
histo_data <- combined_data
# Missing values check
sum(is.na(histo_data))
histo_data
# Change the type of the columns (except the last one) to numeric
histo_data[, 1:18] <- sapply(histo_data[, 1:18], as.numeric)
# Plot setup
par(mfrow = c(5, 4), mar = c(4, 4, 2, 1))  # Adjust layout and margins
# Example for compactness
# hist(histo_data$COMPACTNESS,
#     main = "Distribution de la COMPACTNESS",
#     xlab = "COMPACTNESS",
#     col = "lightblue",
#     border = "black")
histo_data_no_type = histo_data[, 1:18]
# Plot histograms for each variable
for (col_name in colnames(histo_data_no_type)) {
hist(histo_data[[col_name]],
main = paste("Distribution de", col_name),
xlab = col_name,
col = "lightblue",
border = "black")
}
boxplot(histo_data_no_type,
main = "Boxplot des variables",
col = "lightblue",
border = "black")
library(cluster)
histo_data_no_type.mk <- kmeans(histo_data_no_type$crl.tot, centers=2)
histo_data_no_type
histo_data_no_type$crl.tot
histo_data_no_type.mk <- kmeans(histo_data_no_type, centers=2)
histo_data_no_type.km$centers
histo_data_no_type.km <- kmeans(histo_data_no_type, centers=2)
histo_data_no_type.km$centers
print("Clustering vector : ", histo_data_no_type.km$centers)
print(histo_data_no_type.km)
library(ggplot2)
histo_data_no_type$cluster <- as.factor(histo_data_no_type.km$cluster)
ggplot(histo_data_no_type, aes(x = Var1, y = Var2, color = cluster)) +
geom_point() +
labs(title = "K-means Clustering Results")
ggplot(histo_data_no_type, aes(x = histo_data_no_type$COMP, y = histo_data_no_type$CIRC, color = cluster)) +
geom_point() +
labs(title = "K-means Clustering Results")
histo_data_no_type.km <- kmeans(histo_data_no_type, centers=5)
print(histo_data_no_type.km)
library(ggplot2)
histo_data_no_type$cluster <- as.factor(histo_data_no_type.km$cluster)
ggplot(histo_data_no_type, aes(x = histo_data_no_type$COMP, y = histo_data_no_type$CIRC, color = cluster)) +
geom_point() +
labs(title = "K-means Clustering Results")
elbow <- function(data, max_k = 10) {
wss <- sapply(1:max_k, function(k){
kmeans(data, k)$tot.withinss
})
plot(1:max_k, wss, type = "b",
xlab = "Number of clusters",
ylab = "Within groups sum of squares")
}
elbow(histo_data_no_type)
histo_data_no_type.km <- kmeans(histo_data_no_type, centers=3)
print(histo_data_no_type.km)
library(ggplot2)
histo_data_no_type$cluster <- as.factor(histo_data_no_type.km$cluster)
ggplot(histo_data_no_type, aes(x = histo_data_no_type$COMP, y = histo_data_no_type$CIRC, color = cluster)) +
geom_point() +
labs(title = "K-means Clustering Results")
elbow <- function(data, max_k = 10) {
wss <- sapply(1:max_k, function(k){
kmeans(data, k)$tot.withinss
})
plot(1:max_k, wss, type = "b",
xlab = "Number of clusters",
ylab = "Within groups sum of squares")
}
elbow(histo_data_no_type)
library(ggplot2)
histo_data_no_type$cluster <- as.factor(histo_data_no_type.km$cluster)
ggplot(histo_data_no_type, aes(x = histo_data_no_type$COMP, y = histo_data_no_type$CIRC, color = cluster)) +
geom_point() +
labs(title = "K-means Clustering Results")
histo_data_no_type.km <- kmeans(histo_data_no_type, centers=2)
print(histo_data_no_type.km)
print(histo_data_no_type.km)
library(ggplot2)
library(ggplot2)
histo_data_no_type$cluster <- as.factor(histo_data_no_type.km$cluster)
ggplot(histo_data_no_type, aes(x = histo_data_no_type$COMP, y = histo_data_no_type$CIRC, color = cluster)) +
geom_point() +
labs(title = "K-means Clustering Results")
print(histo_data_no_type.km)
library(ggplot2)
histo_data_no_type$cluster <- as.factor(histo_data_no_type.km$cluster)
ggplot(histo_data_no_type, aes(x = histo_data_no_type$COMP, y = histo_data_no_type$CIRC, color = cluster)) +
geom_point() +
labs(title = "K-means Clustering Results")
elbow <- function(data, max_k = 10) {
wss <- sapply(1:max_k, function(k){
kmeans(data, k)$tot.withinss
})
plot(1:max_k, wss, type = "b",
xlab = "Number of clusters",
ylab = "Within groups sum of squares")
}
elbow(histo_data_no_type)
histo_data_no_type.pam <- pam(histo_data_no_type, k=2)
print(histo_data_no_type.pam)
plot(histo_data_no_type.pam)
histo_data_no_type.pam <- pam(combined_data, k=2)
print(histo_data_no_type.pam)
plot(histo_data_no_type.pam)
histo_data_no_type
histo_data_no_type
histo_data_no_type
histo_data_no_type.pam <- pam(histo_data_no_type, k=2)
print(histo_data_no_type.pam)
plot(histo_data_no_type.pam)
elbow <- function(data, max_k = 10) {
wss <- sapply(1:max_k, function(k){
kmeans(data, k)$tot.withinss
})
plot(1:max_k, wss, type = "b",
xlab = "Number of clusters",
ylab = "Within groups sum of squares")
}
elbow(histo_data_no_type)
histo_data_no_type.pam <- pam(histo_data_no_type, k=2)
print(histo_data_no_type.pam)
plot(histo_data_no_type.pam)
histo_data_no_type.pam <- pam(histo_data_no_type[, 100], k=2)
# PAM clustering
# Sample of 100 rows
histo_data_no_type_100_sample <- histo_data_no_type[sample(1:nrow(histo_data_no_type), 100), ]
histo_data_no_type.pam <- pam(histo_data_no_type_100_sample, k=2)
print(histo_data_no_type.pam)
plot(histo_data_no_type.pam)
# PAM clustering
# Sample of 100 rows
histo_data_no_type_100_sample <- histo_data_no_type[sample(1:nrow(histo_data_no_type), 200), ]
histo_data_no_type.pam <- pam(histo_data_no_type_100_sample, k=2)
print(histo_data_no_type.pam)
plot(histo_data_no_type.pam)
distance_matrix <- dist(histo_data_no_type, method = "euclidean")
histo_data_no_type.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type.hc)
plot(histo_data_no_type.pam)
histo_data_no_type.pam <- pam(histo_data_no_type_100_sample, k=3)
print(histo_data_no_type.pam)
plot(histo_data_no_type.pam)
distance_matrix <- dist(histo_data_no_type, method = "euclidean")
histo_data_no_type.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type.hc)
# Cut into 3 clusters
clusters <- cutree(hc, k = 3)
# Cut into 3 clusters
clusters <- cutree(histo_data_no_type.hc, k = 3)
# CAH ( Classification Ascendante Hiérarchique)
data <- scale(histo_data_no_type)  # Scale the data for uniformity
# CAH ( Classification Ascendante Hiérarchique)
data <- scale(histo_data_no_type)  # Scale the data for uniformity
distance_matrix <- dist(histo_data_no_type, method = "euclidean")
histo_data_no_type.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type.hc)
# Cut into 3 clusters
clusters <- cutree(histo_data_no_type.hc, k = 3)
# Add cluster assignments to the original data
data_with_clusters <- data.frame(data, cluster = clusters)
# Add cluster assignments to the original data
data_with_clusters <- data.frame(histo_data_no_type, cluster = clusters)
# CAH ( Classification Ascendante Hiérarchique)
data <- scale(histo_data_no_type)  # Scale the data for uniformity
distance_matrix <- dist(histo_data_no_type, method = "euclidean")
histo_data_no_type.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type.hc)
# Cut into 3 clusters
clusters <- cutree(histo_data_no_type.hc, k = 3)
# Add cluster assignments to the original data
data_with_clusters <- data.frame(histo_data_no_type, cluster = clusters)
plot(data_with_clusters)
# PAM clustering
# Sample of 100 rows
histo_data_no_type_100_sample <- histo_data_no_type[sample(1:nrow(histo_data_no_type), 100), ]
histo_data_no_type.pam <- pam(histo_data_no_type_100_sample, k=3)
print(histo_data_no_type.pam)
plot(histo_data_no_type.pam)
# CAH ( Classification Ascendante Hiérarchique)
data <- scale(histo_data_no_type)  # Scale the data for uniformity
distance_matrix <- dist(histo_data_no_type, method = "euclidean")
histo_data_no_type.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type.hc)
# CAH ( Classification Ascendante Hiérarchique)
data <- scale(histo_data_no_type)  # Scale the data for uniformity
# CAH ( Classification Ascendante Hiérarchique)
summary(histo_data_no_type)
histo_data_no_type_cluster
summary(histo_data_no_type)
histo_data <- combined_data
# Missing values check
sum(is.na(histo_data))
histo_data
# Change the type of the columns (except the last one) to numeric
histo_data[, 1:18] <- sapply(histo_data[, 1:18], as.numeric)
# Plot setup
par(mfrow = c(5, 4), mar = c(4, 4, 2, 1))  # Adjust layout and margins
# Example for compactness
# hist(histo_data$COMPACTNESS,
#     main = "Distribution de la COMPACTNESS",
#     xlab = "COMPACTNESS",
#     col = "lightblue",
#     border = "black")
histo_data_no_type = histo_data[, 1:18]
# Plot histograms for each variable
for (col_name in colnames(histo_data_no_type)) {
hist(histo_data[[col_name]],
main = paste("Distribution de", col_name),
xlab = col_name,
col = "lightblue",
border = "black")
}
boxplot(histo_data_no_type,
main = "Boxplot des variables",
col = "lightblue",
border = "black")
library(cluster)
histo_data_no_type.km <- kmeans(histo_data_no_type, centers=2)
print(histo_data_no_type.km)
summary(histo_data_no_type)
library(ggplot2)
histo_data_no_type_cluster <- as.factor(histo_data_no_type.km$cluster)
ggplot(histo_data_no_type, aes(x = histo_data_no_type$COMP, y = histo_data_no_type$CIRC, color = cluster)) +
geom_point() +
labs(title = "K-means Clustering Results")
histo_data_no_type_copy$cluster <- as.factor(histo_data_no_type.km$cluster)
library(cluster)
histo_data_no_type.km <- kmeans(histo_data_no_type, centers=2)
print(histo_data_no_type.km)
library(ggplot2)
histo_data_no_type_copy <- histo_data_no_type
histo_data_no_type_copy$cluster <- as.factor(histo_data_no_type.km$cluster)
histo_data_no_type_copy$cluster <- as.factor(histo_data_no_type.km$cluster)
ggplot(histo_data_no_type_copy, aes(x = histo_data_no_type_copy$COMP, y = histo_data_no_type_copy$CIRC, color = cluster)) +
geom_point() +
labs(title = "K-means Clustering Results")
elbow <- function(data, max_k = 10) {
wss <- sapply(1:max_k, function(k){
kmeans(data, k)$tot.withinss
})
plot(1:max_k, wss, type = "b",
xlab = "Number of clusters",
ylab = "Within groups sum of squares")
}
elbow(histo_data_no_type)
# PAM clustering
# Sample of 100 rows
histo_data_no_type_100_sample <- histo_data_no_type[sample(1:nrow(histo_data_no_type), 100), ]
histo_data_no_type.pam <- pam(histo_data_no_type_100_sample, k=3)
print(histo_data_no_type.pam)
plot(histo_data_no_type.pam)
# CAH ( Classification Ascendante Hiérarchique)
summary(histo_data_no_type)
data <- scale(histo_data_no_type)  # Scale the data for uniformity
distance_matrix <- dist(histo_data_no_type, method = "euclidean")
histo_data_no_type.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type.hc)
# CAH ( Classification Ascendante Hiérarchique)
data <- scale(histo_data_no_type)  # Scale the data for uniformity
Ascendante
# CAH ( Classification Ascendante Hiérarchique)
histo_data_no_type_scaled <- scale(histo_data_no_type)  # Scale the data for uniformity
distance_matrix <- dist(histo_data_no_type_scaled, method = "euclidean")
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
# Cut into 3 clusters
clusters <- cutree(histo_data_no_type_scaled.hc, k = 3)
# Add cluster assignments to the original data
data_with_clusters <- data.frame(histo_data_no_type_scaled, cluster = clusters)
plot(data_with_clusters)
# CAH ( Classification Ascendante Hiérarchique)
histo_data_no_type_scaled <- scale(histo_data_no_type)  # Scale the data for uniformity
distance_matrix <- dist(histo_data_no_type_scaled, method = "euclidean")
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
# CAH ( Classification Ascendante Hiérarchique)
histo_data_no_type_scaled <- scale(histo_data_no_type)  # Scale the data for uniformity
distance_matrix <- dist(histo_data_no_type_scaled)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward")
distance_matrix <- dist(histo_data_no_type_scaled)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
# CAH ( Classification Ascendante Hiérarchique)
histo_data_no_type_scaled <- scale(histo_data_no_type)  # Scale the data for uniformity
histo_data_no_type_scaled.class <-kmeans(histo_data_no_type_scaled,3)  # K-means clustering (3 clusters)
distance_matrix <- dist(histo_data_no_type_scaled.class)
distance_matrix <- dist(histo_data_no_type_scaled.class)
distance_matrix <- dist(histo_data_no_type_scaled.class$centers)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
# CAH ( Classification Ascendante Hiérarchique)
histo_data_no_type_scaled <- histo_data_no_type  # Scale the data for uniformity
histo_data_no_type_scaled.class <-kmeans(histo_data_no_type_scaled,3)  # K-means clustering (3 clusters)
distance_matrix <- dist(histo_data_no_type_scaled.class$centers)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
# CAH ( Classification Ascendante Hiérarchique)
histo_data_no_type_scaled <- histo_data_no_type  # Scale the data for uniformity
histo_data_no_type_scaled.class <-kmeans(histo_data_no_type_scaled, 4)  # K-means clustering (3 clusters)
distance_matrix <- dist(histo_data_no_type_scaled.class$centers)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
# CAH ( Classification Ascendante Hiérarchique)
histo_data_no_type_scaled <- histo_data_no_type  # Scale the data for uniformity
histo_data_no_type_scaled.class <-kmeans(histo_data_no_type_scaled, 10)  # K-means clustering (3 clusters)
distance_matrix <- dist(histo_data_no_type_scaled.class$centers)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
# CAH ( Classification Ascendante Hiérarchique)
histo_data_no_type_scaled <- histo_data_no_type  # Scale the data for uniformity
histo_data_no_type_scaled.class <-kmeans(histo_data_no_type_scaled, 5)  # K-means clustering (3 clusters)
distance_matrix <- dist(histo_data_no_type_scaled.class$centers)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
histo_data_no_type_scaled.class <-kmeans(histo_data_no_type_scaled, 3)  # K-means clustering (3 clusters)
# CAH ( Classification Ascendante Hiérarchique)
histo_data_no_type_scaled <- histo_data_no_type  # Scale the data for uniformity
histo_data_no_type_scaled.class <-kmeans(histo_data_no_type_scaled, 3)  # K-means clustering (3 clusters)
distance_matrix <- dist(histo_data_no_type_scaled.class$centers)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
# K-means clustering
library(cluster)
histo_data_no_type.km <- kmeans(histo_data_no_type, centers=2)
print(histo_data_no_type.km)
library(ggplot2)
histo_data_no_type_copy <- histo_data_no_type
histo_data_no_type_copy$cluster <- as.factor(histo_data_no_type.km$cluster)
ggplot(histo_data_no_type_copy, aes(x = histo_data_no_type_copy$COMP, y = histo_data_no_type_copy$CIRC, color = cluster)) +
geom_point() +
labs(title = "K-means Clustering Results")
# Elbow method
elbow <- function(data, max_k = 10) {
wss <- sapply(1:max_k, function(k){
kmeans(data, k)$tot.withinss
})
plot(1:max_k, wss, type = "b",
xlab = "Number of clusters",
ylab = "Within groups sum of squares")
}
elbow(histo_data_no_type)
# Elbow starts at 2 and ends at 5, plateau is at around 3
# PAM clustering
# Sample of 100 rows
histo_data_no_type_100_sample <- histo_data_no_type[sample(1:nrow(histo_data_no_type), 100), ]
histo_data_no_type.pam <- pam(histo_data_no_type_100_sample, k=3)
print(histo_data_no_type.pam)
plot(histo_data_no_type.pam)
# We have a good diagram first but also good silhouette with 'high' values meaning that the clusters are well separated
# CAH ( Classification Ascendante Hiérarchique)
histo_data_no_type_scaled <- histo_data_no_type  # Scale the data for uniformity
histo_data_no_type_scaled.class <-kmeans(histo_data_no_type_scaled, 3)  # K-means clustering (3 clusters)
distance_matrix <- dist(histo_data_no_type_scaled.class$centers)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
# Cut into 3 clusters
clusters <- cutree(histo_data_no_type_scaled.hc, k = 3)
# Add cluster assignments to the original data
data_with_clusters <- data.frame(histo_data_no_type_scaled, cluster = clusters)
histo_data_no_type_100_sample.class
distance_matrix <- dist(histo_data_no_type_100_sample$centers)
distance_matrix <- dist(histo_data_no_type_100_sample)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
plot(histo_data_no_type_scaled.hc)
threeGroups <- cutree(resuhist, k = 400)
threeGroups <- cutree(resuhist, k = 400)
threeGroups <- cutree(histo_data_no_type_scaled.hc, k = 400)
threeGroups <- cutree(histo_data_no_type_scaled, k = 400)
#Dendrogram on 100 samples from before
histo_data_no_type_100_sample <- scale(histo_data_no_type_100_sample)
distance_matrix <- dist(histo_data_no_type_100_sample)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
#Dendrogram on 100 samples from before
histo_data_no_type_100_sample_scaled <- scale(histo_data_no_type_100_sample)
distance_matrix <- dist(histo_data_no_type_100_sample_scaled)
histo_data_no_type_100_sample_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_100_sample_scaled.hc)
distance_matrix <- dist(histo_data_no_type_100_sample)
histo_data_no_type_100_sample.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_100_sample.hc)
#Dendrogram on 100 samples from before
histo_data_no_type_100_sample_scaled <- scale(histo_data_no_type_100_sample)
distance_matrix <- dist(histo_data_no_type_100_sample_scaled)
histo_data_no_type_100_sample_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_100_sample_scaled.hc)
#Dendrogram on 100 samples from before
histo_data_no_type_scaled <- scale(histo_data_no_type)
distance_matrix <- dist(histo_data_no_type_scaled)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
distance_matrix <- dist(histo_data_no_type)
histo_data_no_type.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type.hc)
#Dendrogram on 100 samples from before
histo_data_no_type_scaled <- scale(histo_data_no_type)
distance_matrix <- dist(histo_data_no_type_scaled)
histo_data_no_type_scaled.hc <- hclust(distance_matrix, method = "ward.D2")
plot(histo_data_no_type_scaled.hc)
# Display the number of elements in each cluster
table(cutTree_3_clust)
cutTree_3_clust <- cutree(histo_data_no_type_scaled.hc, k = 3)
cutTree_4_clust <- cutree(histo_data_no_type_scaled.hc, k = 4)
# Display the number of elements in each cluster
table(cutTree_3_clust)
table(cutTree_4_clust)
# Display the number of elements in each cluster
table(cutTree_3_clust)
table(cutTree_4_clust)
plot(histo_data_no_type_scaled.hc)
cutTree_3_clust <- cutree(histo_data_no_type_scaled.hc, k = 60)
# Display the number of elements in each cluster
table(cutTree_3_clust)
cutTree_3_clust <- cutree(histo_data_no_type_scaled.hc, k = 2)
# Display the number of elements in each cluster
table(cutTree_3_clust)
cutTree_3_clust <- cutree(histo_data_no_type_scaled.hc, k = 3)
# Display the number of elements in each cluster
table(cutTree_3_clust)
plot(hc, hang = -1)
plot(histo_data_no_type_scaled.hc, hang = -1)
plot(histo_data_no_type_scaled.hc)
plot(histo_data_no_type_scaled.hc, hang = -1)
plot(histo_data_no_type_scaled.hc)
cutTree_3_clust <- cutree(histo_data_no_type_scaled.hc, k = 3)
cutTree_4_clust <- cutree(histo_data_no_type_scaled.hc, k = 4)
# Display the number of elements in each cluster
table(cutTree_3_clust)
table(cutTree_4_clust)
# Display the number of elements in each cluster
table(cutTree_3_clust)
#  1   2   3
# 376 214 162
table(cutTree_4_clust)
cent_3 <- NULL
for(k in 1:3) {
cent_3 <- rbind(cent_3, colMeans(histo_data_no_type_scaled[cutTree_3_clust == k, , drop = FALSE]))
}
cent_3
# Hierarchical clustering on centroids (centroid linkage)
cent_hc <- hclust(dist(cent_3), method = "cen")
# Plot the original and new dendrogram (based on centroids)
opar <- par(mfrow = c(1, 2))  # Set layout to display two plots
plot(histo_data_no_type_scaled.hc, labels = FALSE, hang = -1, main = "Original Dendrogram")
plot(cent_hc, labels = FALSE, hang = -1, main = "Dendrogram of Centroids")
par(opar)  # Restore the original plot layout
